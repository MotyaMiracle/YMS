// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Yard_Management_System;

#nullable disable

namespace YardManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Yard_Management_System.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79ff6fd3-9bcd-48c0-af37-81d47cf00fac"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("1f347d77-e2f8-4eab-a48d-c1a9e043b04a"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Yard_Management_System.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.HasIndex("Login", "Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("300ea297-113d-4266-8956-436f0c129ccd"),
                            Email = "tom@gmail.com",
                            IsActive = false,
                            Login = "tom123",
                            Password = "12345",
                            PhoneNumber = "89169436523",
                            RoleId = new Guid("79ff6fd3-9bcd-48c0-af37-81d47cf00fac")
                        },
                        new
                        {
                            Id = new Guid("815dd257-00e7-4617-bd58-a6ddfaa7c20d"),
                            Email = "alice@gmail.com",
                            IsActive = false,
                            Login = "alice321",
                            Password = "54321",
                            PhoneNumber = "89267434513",
                            RoleId = new Guid("1f347d77-e2f8-4eab-a48d-c1a9e043b04a")
                        });
                });

            modelBuilder.Entity("Yard_Management_System.Models.User", b =>
                {
                    b.HasOne("Yard_Management_System.Models.Role", "Role")
                        .WithOne("User")
                        .HasForeignKey("Yard_Management_System.Models.User", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Yard_Management_System.Models.Role", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
